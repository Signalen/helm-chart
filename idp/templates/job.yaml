apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "idp.fullname" . }}-migrate
  labels:
    {{- include "idp.labels" . | nindent 4 }}
spec:
  backoffLimit: 6
  ttlSecondsAfterFinished: 60
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: migrate
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/local/bin/python3"]
          args: ["/app/migrate/migrate.py"]
          workingDir: /app/migrate
          env:
            - name: DB_HOST
              value: {{ template "idp.postgresql" . }}
            - name: DB_NAME
              value: {{ .Values.postgresql.postgresqlDatabase }}
            - name: DB_USER
              value: {{ .Values.postgresql.postgresqlUsername }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "idp.fullname" . }}
                  key: postgresql-password
            - name: DB_SQL_FILE
              value: "/app/migrate/users.sql"
          volumeMounts:
            - name: migrate
              mountPath: /app/migrate
      volumes:
        - name: migrate
          configMap:
            name: {{ template "idp.fullname" . }}
            items:
              - key: migrate.py
                path: migrate.py
              - key: users.sql
                path: users.sql
