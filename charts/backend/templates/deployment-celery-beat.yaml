apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "signals-backend.celery-beat" . }}
  labels:
    {{- include "signals-backend.labels" . | nindent 4 }}
    component: cellery-beat
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "signals-backend.selectorLabels" . | nindent 6 }}
      component: celery-beat
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "signals-backend.labels" . | nindent 8 }}
        component: celery-beat
    spec:
      containers:
        - name: celery-beat
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/local/bin/celery"]
          args: ["beat", "--app", "signals", "--loglevel", "WARNING", "--pidfile", "/tmp/celerybeat.pid"]
          envFrom:
            - configMapRef:
                name: {{ template "signals-backend.fullname" . }}
            - secretRef:
                name: {{ if .Values.existingSecret }}{{ .Values.existingSecret }}{{ else }}{{ template "signals-backend.fullname" . }}{{ end }}
