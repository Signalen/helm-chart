apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "signals-backend.fullname" . }}
  labels:
    {{- include "signals-backend.labels" . | nindent 4 }}
    component: backend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "signals-backend.selectorLabels" . | nindent 6 }}
      component: backend
  strategy:
    type: {{ .Values.deploymentStrategy }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "signals-backend.labels" . | nindent 8 }}
        component: backend
    spec:
      securityContext:
        fsGroup: 999
      initContainers:
        - name: migrate
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/app/manage.py"]
          args: ["migrate"]
          envFrom:
            - configMapRef:
                name: {{ template "signals-backend.fullname" . }}
            - secretRef:
                name: {{ template "signals-backend.fullname" . }}
      containers:
        - name: api
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /usr/local/bin/uwsgi
          args:
            - '--master'
            - '--http=:8000'
            - '--module=signals.wsgi:application'
            - '--processes=4'
            - '--threads=2'
            - '--static-map=/signals/static=/static'
            - '--static-map=/signals/media=/media'
            - '--die-on-term'
          envFrom:
            - configMapRef:
                name: {{ template "signals-backend.fullname" . }}
            - secretRef:
                name: {{ template "signals-backend.fullname" . }}
          volumeMounts:
            - name: media
              mountPath: /media
            - name: dwh-media
              mountPath: /dwh_media
          livenessProbe:
            httpGet:
              path: /status/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /status/health
              port: http
            initialDelaySeconds: 1
            periodSeconds: 10
          ports:
            - name: http
              protocol: TCP
              containerPort: 8000
      volumes:
        - name: media
        {{- if .Values.persistence.media.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.media.existingClaim }}{{ .Values.persistence.media.existingClaim }}{{- else }}{{ template "signals-backend.fullname" . }}{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: dwh-media
        {{- if .Values.persistence.datawarehouse.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.datawarehouse.existingClaim }}{{ .Values.persistence.datawarehouse.existingClaim }}{{- else }}{{ template "signals-backend.fullname" . }}-datawarehouse{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
