apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "signals-backend.fullname" . }}
  labels:
    {{- include "signals-backend.labels" . | nindent 4 }}
    component: api
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      {{- include "signals-backend.selectorLabels" . | nindent 6 }}
      component: api
  strategy:
    type: {{ .Values.deploymentStrategy }}
  template:
    metadata:
      labels:
        {{- include "signals-backend.labels" . | nindent 8 }}
        component: api
    spec:
      containers:
        - name: api
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /status/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /status/health
              port: http
            initialDelaySeconds: 1
            periodSeconds: 10
          ports:
            - name: http
              protocol: TCP
              containerPort: 8080
          env:
            - name: ALLOWED_HOSTS
              value: {{ .Values.settings.allowedHosts | quote }}
            - name: DJANGO_LOG_LEVEL
              value: error
            - name: DJANGO_SETTINGS_MODULE
              value: signals.settings.production
            - name: UWSGI_HTTP
              value: 0.0.0.0:8080
            - name: UWSGI_MODULE
              value: signals.wsgi:application
            - name: UWSGI_CALLABLE
              value: application
            - name: UWSGI_DIE_ON_TERM
              value: "1"
            - name: UWSGI_LAZY_APPS
              value: "1"
            - name: UWSGI_MASTER
              value: "1"
            - name: UWSGI_PROCESSES
              value: "4"
            - name: UWSGI_STATIC_EXPIRES
              value: "/* 3600"
            - name: UWSGI_STATIC_INDEX
              value: index.html
            - name: UWSGI_STATIC_MAP
              value: /signals/static=/static
            - name: UWSGI_VACUUM
              value: "1"
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "signals-backend.fullname" . }}
                  key: secret-key
            - name: DATAPUNT_API_URL
              value: {{ .Values.settings.datapuntApiUrl }}
            - name: DWH_MEDIA_ROOT
              value: /dwh_media
            - name: DATABASE_HOST_OVERRIDE
              value: {{ .Values.settings.database.host }}
            - name: DATABASE_PORT_OVERRIDE
              value: {{ .Values.settings.database.port | quote }}
            - name: DATABASE_USER
              value: {{ .Values.settings.database.username }}
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "signals-backend.fullname" . }}
                  key: database-password
            - name: DATABASE_NAME
              value: {{ .Values.settings.database.name }}
            - name: RABBITMQ_HOST
              value: {{ .Values.settings.rabbitmq.host }}
            - name: RABBITMQ_USER
              value: {{ .Values.settings.rabbitmq.username }}
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "signals-backend.fullname" . }}
                  key: rabbitmq-password
            - name: RABBITMQ_VHOST
              value: {{ .Values.settings.rabbitmq.vhost }}
            - name: ELASTICSEARCH_HOST
              value: {{ .Values.settings.elasticsearch.host }}
            - name: ELASTICSEARCH_INDEX
              value: {{ .Values.settings.elasticsearch.index }}
          volumeMounts:
            - name: media
              mountPath: /media/attachments
              subPath: attachments
      volumes:
        - name: media
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "signals-backend.fullname" . }}{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
